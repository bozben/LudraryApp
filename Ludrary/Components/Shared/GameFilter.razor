@inject RawgApiService RawgApi

<div class="filter-container" style="display: flex; gap: 1rem; align-items: center; margin-bottom: 1rem;">


    <input type="text" @bind="searchParameters.SearchText" class="form-control" placeholder="Search for a game..." />


    <select @bind="searchParameters.Ordering" class="form-select">
        <option value="">Sort by Relevance</option>
        <option value="-released">Newest</option>
        <option value="-metacritic">Highest Score</option>
        <option value="name">Name (A-Z)</option>
    </select>

    <button type="button" @onclick="Search" class="btn btn-primary">Search</button>
</div>

<div>
    <p>Loaded @(_allGenres.Count) genres.</p>
    <p>Loaded @(_allPlatforms.Count) platforms.</p>
    <p>Loaded @(_allTags.Count) tags.</p>
</div>


@code {
    private SearchParameters searchParameters = new();
    private List<Genre> _allGenres = new();
    private List<Platform> _allPlatforms = new();
    private List<Tag> _allTags = new();

    [Parameter]
    public EventCallback<SearchParameters> OnSearchClicked { get; set; }

    private Task Search()
    {
        return OnSearchClicked.InvokeAsync(searchParameters);
    }

    protected override async Task OnInitializedAsync()
    {
        _allGenres = await RawgApi.GetGenresAsync();
        _allPlatforms = await RawgApi.GetPlatformsAsync();
        _allTags = await RawgApi.GetTagAsync();
    }


}
