@inject RawgApiService RawgApi
@page "/"

<PageTitle>Home</PageTitle>
<h1>Ludrary</h1>
<GameFilter OnSearchClicked="HandleSearch"/>

<hr/>

@if (_isLoading)
{
    <p>Loading Games...</p>
}
else if (!games.Any()) 
{
    <div class="no-results">
        <h3>No Games Found</h3>
        <p>Your search returned no results. Try adjusting your filters.</p>
    </div>
}
else
{
    <div class="game-grid">
        @foreach (var game in games)
        {
            <GameCard Game="game" />
        }
    </div>
    @if (games.Any())
    {
        <div class="mt-4 text-center">
            @if (_isLoadMore)
            {
                <div class="spinner-border text-success" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            }
            else
            {
                <button type="button" @onclick="LoadMore" class="btn btn-success">
                    Load More
                </button>
            }
        </div>
            } 
}


@code{
    private SearchParameters _searchParameters = new();
    private int _currentPage = 1;
    private bool _isLoading = true;
    private bool _isLoadMore = false;
    List<Game> games = new();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            games = await RawgApi.GetPopularGamesAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        finally
        {
            _isLoading = false;
        }
    }

    private async Task HandleSearch(SearchParameters parameters)
    {
        _isLoading = true;
        _searchParameters = parameters;
        _currentPage = 1;
        try
        {
            games = await RawgApi.SearchGamesAsync(_searchParameters, _currentPage);

        }
        finally
        {
            _isLoading = false;

        }
    }

    private async Task LoadMore()
    {
        _isLoadMore = true;
        _currentPage++;
        List<Game> newGames;
        try
        {
            newGames = await RawgApi.SearchGamesAsync(_searchParameters, _currentPage);
            games.AddRange(newGames);
        }
        finally
        {
            _isLoadMore = false;

        }

    }

    
}