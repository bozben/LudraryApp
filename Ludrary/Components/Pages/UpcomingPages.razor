@inject RawgApiService RawgApi
@page "/upcoming"

<PageTitle>Upcoming Games</PageTitle>


@if (_isLoading == true)
{
    <LoadingSpinner />
}
else if(!games.Any())
{
    <div class="no-result-container">
        <h3>No Upcoming Games Found</h3>
    </div>
}
else
{
    <div class="list-page-container">
        <section class="list-hero">
            <h1 class="list-title">UPCOMING GAMES </h1>
            <p class="list-description">
                Get a glimpse into the future of gaming. Here are some of the titles coming soon.
            </p>
        </section>

        <section class="game-list-section">
            <div class="games-grid">
                @foreach (var game in games)
                {
                    <GameCard Game="game"/>
                }
            </div>

            @if (games.Any())
            {
                <div class="load-more-container">
                    @if (_isLoadMoreLoading)
                    {
                        <div class="load-more-spinner">
                            <div class="spinner-border text-warning" role="status">
                                <span class="visully-hidden">Laoding...</span>
                            </div>
                        </div>
                    }
                    else
                    {
                        <button type="button" @onclick="LoadMore" class="load-more-btn">
                            Load More
                        </button>
                    }
                </div>
            }
            
        </section>
    </div>
}


@code {
    private SearchParameters _searchParameters = new();
    private int _currentPage = 1;
    private bool _isLoading = true;
    private bool _isLoadMoreLoading = false;
    List<Game> games = new();


    protected override async Task OnInitializedAsync()
    {
        try
        {
            games = await RawgApi.GetUpcomingGamesAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        finally
        {
            _isLoading = false;
        }
    }

    private async Task LoadMore()
    {
        _isLoadMoreLoading = true;
        _currentPage++;
        List<Game> newGames;
        try
        {
            newGames = await RawgApi.GetUpcomingGamesAsync(_currentPage);
            games.AddRange(newGames);
        }
        finally
        {
            _isLoadMoreLoading = false;

        }

    }


}